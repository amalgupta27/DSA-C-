// âœ… Problem: Find the highest factor (other than the number itself) of a given number
// âœ… Example: 
//     n = 90
//     Factors = {1, 2, 3, 5, 6, 9, 10, 15, 18, 30, 45, 90}
//     Highest proper factor = 45

/*
------------------------------------------------
                ðŸ“ˆ Flow Chart (Hinglish)
------------------------------------------------
Start
   â†“
Input n
   â†“
Initialize i = n/2
   â†“
Repeat while (i >= 1):
   â†“
   Check if (n % i == 0)
        â†“
    If YES â†’ return i (sabse bada factor mil gaya)
        â†“
    Else â†’ i = i-1
   â†“
End Loop
â†“
Return 1 (agar koi aur factor nahi mila)
*/

#include <iostream>
using namespace std;

// âœ… Function to find the highest proper factor
int highestProperFactor(int n) {
    // ðŸ”´ Start i from n/2, kyunki ek number ka sabse bada proper factor maximum n/2 tak hi ho sakta hai
    for (int i = n / 2; i >= 1; i--) {
        // ðŸ”µ Check karte hain ki i se n perfectly divide hota hai ya nahi
        if (n % i == 0) {
            return i; // âœ… Pehla factor mila â†’ wahi sabse bada hoga
        }
        // âšª Else, i ko 1 se kam karte jaayenge
    }
    // âš« Agar koi bhi factor nahi mila, toh by default 1 return karte hain (har number ka factor hota hai)
    return 1;
}

int main() {
    int n;
    cout << "Enter a number: ";
    cin >> n; // ðŸ”µ User se input lete hain

    int highestFactor = highestProperFactor(n); // ðŸ”µ Function ko call karte hain
    cout << "The highest proper factor of " << n << " is: " << highestFactor << endl; // âœ… Output

    return 0;
}
